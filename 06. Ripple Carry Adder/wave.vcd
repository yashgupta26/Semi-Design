$date
	Wed Jun 01 23:22:50 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cry $end
$var reg 4 # x [3:0] $end
$var reg 4 $ y [3:0] $end
$var reg 1 % z $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 ( c3 $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 4 + Sum [3:0] $end
$var wire 1 " Cout $end
$scope module FA0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % c $end
$var reg 1 * cout $end
$var reg 1 . sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 * c $end
$var reg 1 ) cout $end
$var reg 1 1 sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 ) c $end
$var reg 1 ( cout $end
$var reg 1 4 sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ( c $end
$var reg 1 " cout $end
$var reg 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
06
05
14
13
02
01
00
0/
1.
0-
1,
b101 +
0*
0)
0(
b100 '
b1 &
0%
b100 $
b1 #
0"
b101 !
$end
#5
1"
1(
b1 !
b1 +
04
1-
16
0,
12
b1101 $
b1101 '
b100 #
b100 &
#10
11
b1011 !
b1011 +
17
1/
15
b1110 #
b1110 &
#15
14
1)
b1101 !
b1101 +
01
0"
0(
0-
10
03
06
02
1%
b10 $
b10 '
b1010 #
b1010 &
#20
b1111 !
b1111 +
11
1"
1*
1(
1-
13
16
1,
12
b1111 $
b1111 '
b1111 #
b1111 &
#25
